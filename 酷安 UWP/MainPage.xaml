<Page
    x:Class="酷安_UWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:fcu="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:cu="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:local="using:酷安_UWP"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="DefaultTemplate" x:DataType="local:MenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <SymbolIcon Symbol="{x:Bind Icon}" Foreground="{StaticResource CoolApk_Theme_Fore}" />
                <TextBlock Grid.Column="1" Text="{x:Bind Name}" FontSize="16" VerticalAlignment="Center" Foreground="{StaticResource CoolApk_Theme_Fore}" />
            </Grid>
        </DataTemplate>
        <Style x:Key="HambugerMenuItemStyle" TargetType="ListViewItem">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" Height="40" Control.IsTemplateFocusTarget="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="PointerStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="SelectionIndicator.Opacity" Value="1.0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            <Setter Target="SelectionIndicator.Opacity" Value="1.0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Background" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            <Setter Target="SelectionIndicator.Opacity" Value="1.0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Rectangle x:Name="SelectionIndicator" Fill="{StaticResource CoolApk_Theme}" Height="24" Opacity="0.0" Width="6"/>
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="HamburgerMenuTemplate1" TargetType="controls:HamburgerMenu">
            <Grid>
                <SplitView x:Name="MainSplitView" CompactPaneLength="{TemplateBinding CompactPaneLength}" DisplayMode="{TemplateBinding DisplayMode}" IsTabStop="False" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenPaneLength="{TemplateBinding OpenPaneLength}" PanePlacement="{TemplateBinding PanePlacement}" PaneBackground="{TemplateBinding PaneBackground}">
                    <SplitView.Pane>
                        <Grid x:Name="PaneGrid" FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Height="{TemplateBinding HamburgerHeight}" Margin="0,0,0,8" Grid.Row="0"/>
                            <ListView x:Name="ButtonsListView" ItemContainerStyle="{StaticResource HambugerMenuItemStyle}" ItemTemplate="{TemplateBinding ItemTemplate}" IsItemClickEnabled="True" ItemsSource="{TemplateBinding ItemsSource}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" AutomationProperties.Name="Menu items" Grid.Row="1" SelectionMode="Single" SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" TabIndex="1" ScrollViewer.VerticalScrollBarVisibility="Auto" Width="{TemplateBinding OpenPaneLength}"/>
                            <ListView x:Name="OptionsListView" ItemContainerStyle="{StaticResource HambugerMenuItemStyle}" ItemTemplate="{TemplateBinding OptionsItemTemplate}" IsItemClickEnabled="True" ItemsSource="{TemplateBinding OptionsItemsSource}" ItemTemplateSelector="{TemplateBinding OptionsItemTemplateSelector}" Margin="0,20,0,8" AutomationProperties.Name="Option items" Grid.Row="2" SelectionMode="Single" SelectedItem="{Binding SelectedOptionsItem, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectedIndex="{Binding SelectedOptionsIndex, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" TabIndex="2" VerticalAlignment="Bottom" ScrollViewer.VerticalScrollBarVisibility="Disabled" Width="{TemplateBinding OpenPaneLength}"/>
                        </Grid>
                    </SplitView.Pane>
                    <ContentPresenter x:Name="ContentPart" Content="{TemplateBinding Content}" AutomationProperties.Name="Content"/>
                </SplitView>
                <Button x:Name="HamburgerButton" Background="Transparent" BorderThickness="0" Height="{TemplateBinding HamburgerHeight}" Margin="0,0,0,8" AutomationProperties.Name="Main button" Padding="0" TabIndex="0" VerticalAlignment="Top" Visibility="{TemplateBinding HamburgerVisibility}" Width="{TemplateBinding HamburgerWidth}">
                    <ContentControl ContentTemplate="{TemplateBinding HamburgerMenuTemplate}" Foreground="{TemplateBinding PaneForeground}" IsTabStop="False" Margin="{TemplateBinding HamburgerMargin}"/>
                </Button>
            </Grid>
        </ControlTemplate>
    </Page.Resources>

    <Grid x:Name="GridRootLayout" Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!--平板-->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="hamburgerMenuControl.DisplayMode" Value="CompactOverlay"/>
                        <Setter Target="VFrame.Margin" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <!--电脑-->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="hamburgerMenuControl.DisplayMode" Value="CompactInline"/>
                        <Setter Target="hamburgerMenuControl.IsPaneOpen" Value="true"/>
                        <Setter Target="VFrame.Margin" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:HamburgerMenu Template="{StaticResource HamburgerMenuTemplate1}" x:Name="hamburgerMenuControl" PaneBackground="{StaticResource CoolApk_Theme_Back}" Foreground="{StaticResource CoolApk_Theme_Fore}" 
                                ItemTemplate="{StaticResource DefaultTemplate}" ItemClick="OnMenuItemClick"
                                OptionsItemTemplate="{StaticResource DefaultTemplate}" OptionsItemClick="OnMenuItemClick" SelectedIndex="2"
                                DisplayMode="Overlay">
            <Frame x:Name="VFrame" Margin="0,48,0,0"/>
        </controls:HamburgerMenu>
        <ProgressRing Width="100" Height="100" x:Name="progressRing" IsActive="True" Foreground="{StaticResource CoolApk_Theme}"/>
    </Grid>
</Page>
